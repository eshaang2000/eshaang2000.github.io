---
title: "The Internet is Marvelous"
layout: post
# date: <++>
headerImage: false
tag:
- CS
- Learning
- Software
# star: true
category: blog
author: eshaan 
description: You can learn anything you want from the internet
---
Hey! My hyposthesis is that you can learn anything you want from the interent. I know this is a very common saying and most of the people I know believe in it too. Then why are we still going to colleges or class when you can learn the same thing you learnt in an hour and twenty minutes in 10 minutes on youtube. Why do students still want to go to class? To prove my point I am going to go through my own experience. I procrastinate a lot and [parkinsons law](https://www.atlassian.com/blog/productivity/what-is-parkinsons-law#:~:text=Parkinson's%20Law%20is%20the%20old,for%20the%20Economist%20in%201955) catches upto me pretty often. So I really have to self teach myself basically the entire curriculum. So far, I have been able to finnesse a good grade 23/26 times. I used to consider myself lucky (and I am), but there is something else going on. Maybe self learning and learning by doing is the most effective way to do things! So coming back to the point, I have been slacking hard on this class Software Methedology and I am going to catch up on my own. While I do that I will document what I am doing and what resources I am looking at.

## Software Methedology

This class is a precursor to software engineering. Teaches you (outdated) stuff (albeit important) about OOPS. The language is java. I start out by inheritance. 

### Inheritance

Video watched - 
Key points

1. You don't want to be writing a lot of code repeadetly
2. You can have a class that describes a top level object and you can go into specifics later. 
For example - Class Animal can be defined and then you can define your favorite animal - Dog later on. 
3. The premise is that every animal will have the attributes - no of limbs etc and then a dog will have a specific attribute like cuteness level

Super class and sub class!!

### Polymorphism

Video watched - 
Key Points

1. Polymorphism is the ability to take many forms
2. Every instance of a subclass is a specialization of a super class
3. You can always pass an instance of a subclass to a parameter of it's superclass

### Abstract classes and Interfaces

Video watched - [https://www.youtube.com/watch?v=52frlN8webg](https://www.youtube.com/watch?v=52frlN8webg)
Key points

1. They are just organisational tools
2. They force the programmer to code in a certain way 
3. They define a blueprint for coding

Nothing much here

More to come!